# Generated by Django 5.1.5 on 2025-01-21 22:12

import django.db.models.deletion
from django.db import connection, migrations, models


# There's an anomaly with our job_fact table in which there are duplicate job facts, and the "second"
# entry contains less data than the first entry. This function removes all of the "second" entries.
def remove_duplicate_job_facts(apps, schema_editor):
    JobFact = apps.get_model("core", "JobFact")

    # Find the duplicate job facts. This is done by grouping by `job_id` and returning the "larger" ID of the grouping.
    cursor = connection.cursor()
    cursor.execute(
        """
        with duplicate_job_ids as (
            select job_id from core_jobfact group by job_id HAVING count(*) > 1
        ),
        duplicate_facts as (
            SELECT job_id, id FROM core_jobfact WHERE job_id IN (SELECT job_id FROM duplicate_job_ids) ORDER BY job_id
        )
        SELECT DISTINCT ON (job_id) id FROM duplicate_facts ORDER BY job_id ASC, id DESC;
    """
    )
    duplicate_fact_ids = [x[0] for x in cursor.fetchall()]

    # Delete all duplicate job facts
    JobFact.objects.filter(id__in=duplicate_fact_ids).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0005_migrate_dimensional_data"),
    ]

    operations = [
        migrations.RunPython(remove_duplicate_job_facts, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name="jobfact",
            name="id",
        ),
        migrations.AlterField(
            model_name="jobfact",
            name="job",
            field=models.PositiveBigIntegerField(primary_key=True, serialize=False),
        ),
        migrations.RemoveConstraint(
            model_name="jobfact",
            name="job-fact-composite-key",
        ),
        migrations.DeleteModel(
            name="JobDataDimension",
        ),
        migrations.RemoveConstraint(
            model_name="timerfact",
            name="timer-fact-composite-key",
        ),
        migrations.RemoveConstraint(
            model_name="timerphasefact",
            name="timerphase-fact-composite-key",
        ),
        migrations.RenameField(
            model_name="jobfact",
            old_name="job",
            new_name="job_id",
        ),
        migrations.RenameField(
            model_name="timerfact",
            old_name="job",
            new_name="job_id",
        ),
        migrations.RenameField(
            model_name="timerphasefact",
            old_name="job",
            new_name="job_id",
        ),
        migrations.AlterField(
            model_name="jobfact",
            name="gitlab_job_data",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="core.gitlabjobdatadimension",
            ),
        ),
        migrations.AlterField(
            model_name="jobfact",
            name="job_result",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="core.jobresultdimension",
            ),
        ),
        migrations.AlterField(
            model_name="jobfact",
            name="job_retry",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="core.jobretrydimension",
            ),
        ),
        migrations.AlterField(
            model_name="jobfact",
            name="pod_name",
            field=models.CharField(max_length=128),
        ),
        migrations.AlterField(
            model_name="jobfact",
            name="spack_job_data",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="core.spackjobdatadimension",
            ),
        ),
        migrations.AlterField(
            model_name="spackjobdatadimension",
            name="job_size",
            field=models.CharField(default=1, max_length=128),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="spackjobdatadimension",
            name="stack",
            field=models.CharField(default=1, max_length=128),
            preserve_default=False,
        ),
        migrations.AddConstraint(
            model_name="timerfact",
            constraint=models.UniqueConstraint(
                fields=("job_id", "date", "time", "timer_data", "package", "spec"),
                name="timer-fact-composite-key",
            ),
        ),
        migrations.AddConstraint(
            model_name="timerphasefact",
            constraint=models.UniqueConstraint(
                fields=(
                    "job_id",
                    "date",
                    "time",
                    "timer_data",
                    "package",
                    "spec",
                    "phase",
                ),
                name="timerphase-fact-composite-key",
            ),
        ),
    ]
